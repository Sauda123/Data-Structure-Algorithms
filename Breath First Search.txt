
import collections
def bfs(graph, root): 
    visited, queue = set(), collections.deque([root])
    visited.add(root)
    while queue: 
        vertex = queue.popleft()
        print(vertex)
        for neighbour in graph[vertex]: 
            if neighbour not in visited: 
                visited.add(neighbour) 
                queue.append(neighbour) 
if __name__ == '__main__':
    graph = {'A': ['B', 'C', 'E'],

         'B': ['A','D', 'E'],

         'C': ['A', 'F', 'G'],

         'D': ['B'],

         'E': ['A', 'B','D'],

         'F': ['C'],

         'G': ['C']}
    bfs(graph, 'A')